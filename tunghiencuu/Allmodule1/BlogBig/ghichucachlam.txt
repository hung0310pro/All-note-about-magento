+ Trước hết muốn tạo 1 file module thì phải : 
- Tạo ra file registration.php, và Folder etc thì có cái file module.xml, ngoải ra tạo bảng trong cơ sở dữ liệu thì tạo thêm Folder Setup trong đấy
có file Installschema.php. sau đó chạy mấy cái lệnh kia...

+ B1 Vào đề. Trước hết phải tạo 2 cái menu trong admin là Category và Portfolio : 
- Trong file etc->adminhtml->routes.xml(khai báo module <module name="AHT_BlogBig"/>)(khai báo cho admin).
- Sau đó tạo file menu.xml trong đấy có tk cha và 2 tk menu con của tk cha (có số thứ tự, tên menu....).

+ B2 là tạo cái Danh sách thì cái này trước hết phải cái NHỚ cái link sẽ phải gõ là : module(front-name ở trong file route.xml)_controllerName_controllerAction.
- Thì phải tạo mấy cái Controller->adminhtml->ControllerName->ControllerAction(index,update,showupdate,delete...)
- Tạo cả Model->ResourceModel->Collection.
- Khi tạo cái này thì Trong View tạo Folder Layout->File xml, File này có tác dụng khai báo đường link tới file Ui_Component, hoặc là cái link tới cái Block mà
mình làm kiểu Form(qh Online mà k dùng Ui_Component).
  - Nếu là Ui_Component trước hết phải khai báo trong File di.xml(dữ liệu lấy ra từ đâu, rồi chưa kể, điều hướng upload Imgae), 
    sau đó tạo ra file đó thì đấy có giải thích ở trong 2 file rồi, nếu dạng form là 1 kiểu, còn dạng show ra danh sách là 1 kiểu nhé. (dữ liệu trong này). 
  - Nếu là làm theo kiểu Form thì tạo 1 file điều hướng ở Block sau đó tạo 1 Folder trong đó cái cái Form của mình chứa các Column mình cần.

+ B3 tạo các file trong Folder Ui->Component->listing->Column->NameFile bên trong này là truyền Id để thực hiện SỬA và Xóa.
*** Giải thích 1 chút phần này.
- Trong file di.xml thì đây là đoạn mình tạo địa chỉ upload ảnh tới folder cho nó
  <argument name="baseTmpPath" xsi:type="string">image</argument>
  <argument name="basePath" xsi:type="string">image</argument>
- Muốn upload Image trước hết phải có cái phần Image ở trong cái Ui_component : 
  - formElement : imageUploader
  - previewTmpl : Magento_Catalog/image-preview
  - <argument name="class" xsi:type="string">AHT\BlogBig\Model\Question\DataProvider</argument> : Cái DataProvider.php là trả về dữ liệu của ảnh khi muốn Update(Nhớ 
  phải khai báo trong di.xml nữa
   <type name="AHT\BlogBig\Controller\Adminhtml\IndexPortfolio\UploadImage">
        <arguments>
            <!--cái này dùng cho cái virtualType ở dưới-->
            <argument name="imageUploader" xsi:type="object">AHT\BlogBig\Image</argument>
            <!-- cái này phục vụ cho cái trả về dữ liệu, đây là link gốc rồi nên không
             cần phải dùng tới cái virtualType ảo kia nữa-->
            <argument name="class" xsi:type="string">AHT\BlogBig\Model\Question\DataProvider</argument>
        </arguments>
    </type>), ngoài ra nó trả về dữ liệu của cái dòng Id mà mình muốn chỉnh sửa.
  - <item name="url" xsi:type="url" path="blogbig/indexportfolio/uploadimage"/>(file ui_component) cái này điều hướng để upload Image, trong này cái file Uploadimage.php của mình là
  nó đang thu tất cả dữ liệu của image rồi chuyển sang file Image.php trong Model để Upload.

- Ngoài ra ô select option thì có 1 chỗ là điều hướng tới cái  ListCt.php là nó đổ dữ liệu vào ô select đó.
- Và còn cả chỗ Id, <dataProvider... và còn cả  <url path="blogbig/indexportfolio/addpf"/>(xử lí khi ấn submit save)....

+ B4 Admin có thể tạo widget portfolio (chọn số lượng portofolio hiển thị, setting slider)
- Cái này thì làm như sau : trong Folder etc tạo File Widget.xml, có cái class điều hướng tới Posts.php, ngoài ra ở dưới là 1 số cái mình tạo thông số như là
số lượng sản phẩm cần hiển thị, những Id được hiện ra...(cái này sẽ được điều ở trong trang admin khi insert Widget vào Page).
- Trong Posts.php thì điều hướng tới trang posts.phtml trong phần frontend-templates...(đây là phần view), thì phần Posts.php thực hiện lấy dữ liệu và link tới 
các Image thôi.
- Trong posts.phtml thực hiện cho dữ liệu ra, ngoài ra tạo cái <script type="text/javascript"> để chạy slider(trước đó tạo File requireJs và folder Web ở trong 
frontend trước, sau đó vào phần MagentoTheme trong phần design để gọi các thư viện này rồi xóa pub và var đi rồi deploy lại là đc( hình như chỉ cần tạo phần Folder
Web trong cái MagentoTheme là được xong rồi gọi trong cái default_head_blocks.xml là đc chứ k cần phải tạo web trong module nữa)).


+ Lấy lastinsert ID ở trong AddCt.php(adminhtml trong controller)

+ B5 Admin config cho trang list:
•	Page title
•	Meta description
•	Meta keywords
•	Số portfolio hiển thị trên 1 hàng

- Cái pagte title đọc trong skype nhé, có 1 hàm ghi trong Controller rồi.
- 2 cái Meta kia cx dễ thôi : Tạo cái headpf.phtml trong templates sau đó lấy dữ liệu meta ra, rồi sau đó dùng cái : 
 <referenceContainer name="head.additional">
        <block class="AHT\BlogBig\Block\CategoryPf" name="blogbig_myheadpf"
               template="AHT_BlogBig::headpf.phtml"/>
 </referenceContainer> (trong file layout của nó, nó hỗ trợ thêm mấy cái meta, hay css gì đó vào cái head của trang Magento frontend luôn)

+ B6 cái chèn Menu thì cx dễ :
- Trước hết phải khai báo  <preference for="Magento\Theme\Block\Html\Topmenu" type="AHT\BlogBig\Block\MyMenu"/>(cái này kiểu khai báo toàn cục) trong file di.xml
Sau đó tạo Block  MyMenu.php kế thừa \Magento\Theme\Block\Html\Topmenu.
- Sau đó vào cái trang Topmenu.phtml tìm cái hàm nó đang đổ Menu ra là hàm getHtml() thì mình viết lại hàm này là thêm cái Menu của mình vào 1 chuỗi là $html1
sau đó nối thẳng vào cái chuỗi trả về của nó là $html là xong.(cái này là luôn luôn có vì mình đã sửa hàm lấy dữ liệu menu ra của nó và khai báo toàn cục như trong
di.xml).

+ B7 Phần Front-end cx thế cx có Route riêng, Controller, và View,Block riêng. vào trong mà xem chú thích nhé.
+ Các Ui_component tự động lấy dữ liệu ra nhé.

+ jquery ajax dùng trong cái detailpf.phtml.(liên quan cả Route trong Controller nhé).


+ xét đăng nhập mới được cmt cái này ở trong block/DetailPf.php cái hàm getCustomerId()
- Sau đó check xem có không thì cho cmt, không thì bắt đn.

- Còn cái chèn Menu Your Comment thì nó ở trong phần layout(customer_account.xml) cái này chèn thẳng
cái link mình vào cái đó bằng argument(giống cái My Product Reviews
 trong layout ở module_review luôn).
- Nhét vào được như thế khi mình ấn vào cái My Account thì nó chuyển sang cái trang http://127.0.0.1/magento2/index.php/customer/account/
chứ nó không phải vừa ms vào là có như cái menu kia.


 