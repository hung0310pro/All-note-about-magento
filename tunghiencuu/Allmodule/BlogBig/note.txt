+ Lấy tất cả dữ liệu ra ngoài $model->getCollection->getData();
+ Lấy 1 vài cột $model->getCollection->addFieldToSelect(["id","title"])->addFieldToFilter("id",["eq" => 1])->getData();
Lấy bằng là eq, LỚN Hơn là gt, còn NHỎ hơn là lt, neq là KHÁC, gteq là LƠN HƠN HOẶC BẰNG, tương tự vs nhỏ hơn hoặc bằng.
+ addFieldToFilter tk này là điều kiện lọc, nếu vs in nữa là addFieldToFilter("id",["in" => $caican]);

// lấy và và thì check tk DetailPf nhé.

public function getSkinBlog()
{
$model = $this->_collectionFactory->create();
$listSkinBlog = $model->setPageSize(3)->setCurPage(1)->setOrder('id', 'desc')->getData();
return $listSkinBlog; (giới hạn 3 sản phẩm, và orderby nè)
}

// phần left join nè. muốn rõ vào phần MyComment ở trong Block của BlogBig nhé
$model = $this->_comment->create();
			$second_table_name = $this->_resource->getTableName('portfolio');
			$model->getSelect()->joinLeft(array('second' => $second_table_name),
				'main_table.id_portfolio = second.id')
				->where("id_user=" . $this->getCustomerId()['id']);

$mang = $model->getData()


+ khi muốn chèn cái gì css thì tạo cái magento_theme trong design xong cái file default_head_blocks.xml là đc, vì chạy CSS hay JS thì đều sử 
dụng của tk magento_theme.

+ khi hiện ra front end thì ta có thể dùng 2 cách : 
- Cách 1 là dùng layout, templates,block.
- Cách 2 là dùng widget.xml(trong folder etc) cái này thì nó dễ sử dụng hơn, nó sẽ đóng gói cả cái module của mình thành trong cái widget rồi sau đó 
được đưa rabất kì chỗ nào mình mong muốn.

+ thì vào tk etc tạo widget rồi sau đó lưu lại vào admin vào 1 page để insert widget thì nó sẽ có cái của mình, ngoài ra trong widget có thể chèn các thông
số vào đó, ví dụ SỐ LƯỢNG hiển thị ra trang, những id nào đc ra, nó sẽ hiện thông số này để điền vào ghi mình insert widget vào trong Page(admin).
+ Sau đó tạo 1 cái block như class="AHT\BlogBig\Block\BlogWidget\Widget\Posts"
+ Sau đó vào rồi tạo 1 cái file posts.phtml để show dữ liệu ra ngoài.

+ // _objectManager có thể hỗ trợ mọi thư viện mà ta mong muốn, chỉ dùng trong controller thì ms đc dùng this ntn
			$imageHelper = $this->_objectManager->get("AHT\BlogBig\Helper\Image");
+ còn trong block mà muốn dùng _objectManager  thì phải khai báo.(trong tk DetailPf.php)

+ cách chèn meta thì làm như vào cái headpf.phtml(frontend) thì là chèn nội dung như cái layout của nó(blogbig_indexcategory_categorypf.xml).

+ Cách lấy link dẫn tới Image upload thì check trong skype.
lấy image upload(đang viết trong block) :use Magento\Framework\ObjectManagerInterface; public function getBaseURLMedia()
{
$media = $this->_objectManager->get("Magento\Store\Model\StoreManagerInterface")
->getStore()
->getBaseUrl(\Magento\Framework\UrlInterface::URL_TYPE_MEDIA);
return $media;
}


+ Cái Dataprovider.php trong model là có tác dụng lấy hết dữ liệu ra khi mình dùng UI_component
có nghĩa là mình chỉ cần ghi
 <type name="Magento\Framework\View\Element\UiComponent\DataProvider\CollectionFactory">
        <arguments>
            <argument name="collections" xsi:type="array">
                <item name="blogmvc_listing_data_source" xsi:type="string">
                    AHT\Blogtest\Model\Sach\Dataprovider
                </item>
            </argument>
        </arguments>
    </type>
chứ không cần phải dùng cái thằng virtualType này nữa. Ngoài ra trong file ui_component chỗ
datasourece class chỉnh là  AHT\Blogtest\Model\Sach\Dataprovider và các cái phần argument phải chỉnh
sao cho 1 cách hợp lí

+ cái left join thì vào cái BlogBig/Block/MyComment.php để xem nhé

